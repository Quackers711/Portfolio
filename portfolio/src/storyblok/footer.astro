---
const today = new Date();

interface link {
  url: string;
  title: string;
  icon: string;
  iconPath: string;
}

interface Blok {
  name: string;
  socialLinks: link[];
}

import { storyblokEditable, renderRichText } from '@storyblok/astro'

const { blok } = Astro.props
---

<footer {...storyblokEditable(blok)}>
    &copy; {today.getFullYear()} {blok.name}. All rights reserved.
    <div class="social-links">
        {blok.socialLinks && Array.isArray(blok.socialLinks) && blok.socialLinks.map((link) => (
            <a href={link.url} target="_blank" {...storyblokEditable(link)}>
                <span class="sr-only">{link.title}</span>
                <svg
                    viewBox="0 0 16 16"
                    aria-hidden="true"
                    width="32"
                    height="32"
                    astro-icon={`social/${link.icon}`}
                >
                    <path fill="currentColor" d={link.iconPath}></path>
                </svg>
            </a>
        ))}
    </div>
</footer>
<style>
	footer {
		padding: 2em 1em 6em 1em;
		background: linear-gradient(var(--gray-gradient)) no-repeat;
		color: rgb(var(--gray));
		text-align: center;
	}
	.social-links {
		display: flex;
		justify-content: center;
		gap: 1em;
		margin-top: 1em;
	}
	.social-links a {
		text-decoration: none;
		color: rgb(var(--gray));
	}
	.social-links a:hover {
		color: rgb(var(--gray-dark));
	}
</style>
